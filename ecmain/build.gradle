apply plugin: 'com.android.application'
Properties properties = new Properties()
InputStream inputStream = project.rootProject.file('local.properties').newDataInputStream()
properties.load(inputStream)

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    defaultConfig {
        applicationId "com.itsite.ec"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName

        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }
    }

    //移除lint检测的error
    lintOptions {
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    signingConfigs {
        debug {
            keyAlias 'agl'
            keyPassword 'aglandroid'
            storeFile file('../agl.keystore')
            storePassword 'aglandroid'
        }
        release {
            keyAlias properties.getProperty('keyAlias')
            keyPassword properties.getProperty('keyPassword')
            storeFile file('../agl.keystore')
            storePassword properties.getProperty('storePassword')
        }
    }

    buildTypes {
        debug {
            ndk {
                abiFilters "armeabi"
            }
            signingConfig signingConfigs.debug
            aaptOptions {
                cruncherEnabled false//快速处理PNG图片
            }
        }
        release {
            ndk {
                abiFilters "armeabi"
            }
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    flavorDimensions "default"//这个名字貌似随便取，也可以有多个，总之一定要有..
    productFlavors {
            ec{}
    }

//    buildTypes.all {
//        buildType -> buildType.versionNameSuffix = buildType.isDebuggable() ? "-测试版" : "-正式版"
//    }

    productFlavors.all {
        flavor ->
            def code = defaultConfig.versionCode.toString()
            code = code.substring(0, 1) +
                    "." + code.substring(1, 2) +
                    "." + code.substring(2)
            flavor.versionName = code
    }

    // 输出文件配置，格式如下：app-{渠道名称+版本}-{版本号}-{日期时间}.apk
    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith('.apk')) {
                //app-yishequDebug-2.2.5-201803101650.apk
                outputFileName = "app-${variant.name}-${variant.versionName}-${new Date().format('yyyyMMddHHmm')}.apk"
            }
        }
    }
}
dependencies {
    api fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    //阿里巴巴开源基础路由
    annotationProcessor 'com.alibaba:arouter-compiler:1.1.4'
    //分类模块。
    api project(':classify')
    //配送模块。
    api project(':delivery')
    //商品详情模块。
    api project(':goodsdetail')
    //商品主页模块。
    api project(':goodshome')
    //搜索模块。
    api project(':goodssearch')
    //订单模块。
    api project(':order')
    //web模块。
    api project(':web')
    //购物车模块。
    api project(':shoppingcart')
    //售后模块
    api project(':aftersales')

    api project(':login')

    api 'com.aurelhubert:ahbottomnavigation:2.0.6'

    //switchbutton
    compile 'com.kyleduo.switchbutton:library:2.0.0'

    //暂时使用的更新库,配合更新库使用，后期要内化掉。
    api 'com.qianwen:update-app:3.3.1'
    api 'com.qianwen:okhttp-utils:3.8.0'
}
